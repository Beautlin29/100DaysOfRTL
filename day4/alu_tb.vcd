$date
	Thu Jul 10 18:53:27 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 8 ! out [7:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$var reg 3 $ op [2:0] $end
$scope module ALU $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 3 ' op [2:0] $end
$var parameter 3 ( OP_ADD $end
$var parameter 3 ) OP_AND $end
$var parameter 3 * OP_EQL $end
$var parameter 3 + OP_LSR $end
$var parameter 3 , OP_OR $end
$var parameter 3 - OP_SLL $end
$var parameter 3 . OP_SUB $end
$var parameter 3 / OP_XOR $end
$var reg 8 0 out [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 1 j [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 /
b1 .
b10 -
b101 ,
b11 +
b111 *
b100 )
b0 (
$end
#0
$dumpvars
b0 2
b0 1
b11010010 0
b0 '
b1000000 &
b10010010 %
b0 $
b1000000 #
b10010010 "
b11010010 !
$end
#10000
b11010011 !
b11010011 0
b1 $
b1 '
b110001 #
b110001 &
b100 "
b100 %
b1 2
#20000
b1100 !
b1100 0
b10 $
b10 '
b11000110 #
b11000110 &
b10000110 "
b10000110 %
b10 2
#30000
b11001 !
b11001 0
b11 $
b11 '
b1001 #
b1001 &
b110010 "
b110010 %
b11 2
#40000
b10000000 !
b10000000 0
b100 $
b100 '
b10000110 #
b10000110 &
b10000000 "
b10000000 %
b100 2
#50000
b10111111 !
b10111111 0
b101 $
b101 '
b10011110 #
b10011110 &
b10111011 "
b10111011 %
b101 2
#60000
b110000 !
b110000 0
b110 $
b110 '
b11000110 #
b11000110 &
b11110110 "
b11110110 %
b110 2
#70000
b0 !
b0 0
b111 $
b111 '
b1100011 #
b1100011 &
b11111100 "
b11111100 %
b111 2
#80000
b10110111 !
b10110111 0
b0 $
b0 '
b1010101 #
b1010101 &
b1100010 "
b1100010 %
b1 1
b0 2
#90000
b1 $
b1 '
b111011 #
b111011 &
b11110010 "
b11110010 %
b1 2
#100000
b10010 !
b10010 0
b10 $
b10 '
b11000111 #
b11000111 &
b1001 "
b1001 %
b10 2
#110000
b1111100 !
b1111100 0
b11 $
b11 '
b1100111 #
b1100111 &
b11111001 "
b11111001 %
b11 2
#120000
b1100000 !
b1100000 0
b100 $
b100 '
b1100010 #
b1100010 &
b1110100 "
b1110100 %
b100 2
#130000
b11111110 !
b11111110 0
b101 $
b101 '
b1011110 #
b1011110 &
b10101110 "
b10101110 %
b101 2
#140000
b100100 !
b100100 0
b110 $
b110 '
b110010 #
b110010 &
b10110 "
b10110 %
b110 2
#150000
b0 !
b0 0
b111 $
b111 '
b10000101 #
b10000101 &
b110001 "
b110001 %
b111 2
#160000
b11010000 !
b11010000 0
b0 $
b0 '
b10010000 #
b10010000 &
b1000000 "
b1000000 %
b10 1
b0 2
#170000
b10000111 !
b10000111 0
b1 $
b1 '
b1001110 #
b1001110 &
b11010101 "
b11010101 %
b1 2
#180000
b10010110 !
b10010110 0
b10 $
b10 '
b1001 #
b1001 &
b1001011 "
b1001011 %
b10 2
#190000
b11 !
b11 0
b11 $
b11 '
b101001 #
b101001 &
b110 "
b110 %
b11 2
#200000
b100000 !
b100000 0
b100 $
b100 '
b1101010 #
b1101010 &
b10110101 "
b10110101 %
b100 2
#210000
b1010111 !
b1010111 0
b101 $
b101 '
b1010111 #
b1010111 &
b1 "
b1 %
b101 2
#220000
b11101001 !
b11101001 0
b110 $
b110 '
b1100111 #
b1100111 &
b10001110 "
b10001110 %
b110 2
#230000
b0 !
b0 0
b111 $
b111 '
b10000101 #
b10000101 &
b10010001 "
b10010001 %
b111 2
#240000
b11 1
b1000 2
